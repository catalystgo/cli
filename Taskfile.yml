version: '3'

vars:
  GOBIN: "$(pwd)/bin"
  VERSION: "unknown"

  DOCKER_IMAGE_CATALYSTGO: "catalystgo/cli"
  DOCKER_IMAGE_PROTOC_GEN_CATALYSTGO: "catalystgo/protoc-gen-catalystgo"

tasks:
  build:
    cmds:
      - go build -o bin/catalystgo cmd/catalystgo/main.go
      - go build -o bin/protoc-gen-catalystgo cmd/protoc-gen-catalystgo/main.go

  release:
    cmds:
      - "{{.GOBIN}}/goreleaser release --snapshot --clean"

  run:
    cmds:
      - go run ./cmd/.

  mock:
    cmds:
      - echo "mocking!"

  format:
    cmds:
      - task: go_files
        vars: { COMMAND: 'gofmt -w  {} +'}
      - task: go_files
        vars: { COMMAND: '{{.GOBIN}}/goimports -w  {} +'}

  test:
    cmds:
      - go test -v -race -cover ./...

  lint:
    cmds:
      - "{{.GOBIN}}/revive
        -config revive.toml
        -formatter friendly
        -exclude ./**/mock
        ./..."

  pre-commit:
    desc: "Run all pre-commit tasks"
    cmds:
      - task: format
      - task: lint
      - task: test

  deps:
    desc: "Install required dependencies"
    cmds:
      # GRPC
      - GOBIN={{.GOBIN}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@v2.16.0
      - GOBIN={{.GOBIN}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@v2.16.0
      - GOBIN={{.GOBIN}} go install github.com/planetscale/vtprotobuf/cmd/protoc-gen-go-vtproto@v0.6.0
      - GOBIN={{.GOBIN}} go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.1
      - GOBIN={{.GOBIN}} go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0
      - GOBIN={{.GOBIN}} go install github.com/bufbuild/buf/cmd/buf@v1.31.0

      # CATALYSTGO
      # - GOBIN={{.GOBIN}} go install github.com/catalystgo/cli/cmd/catalystgo@v0.0.4
      # - GOBIN={{.GOBIN}} go install github.com/catalystgo/cli/cmd/protoc-gen-catalystgo@v0.0.4

      # TOOLS
      - GOBIN={{.GOBIN}} go install github.com/goreleaser/goreleaser/v2@v2.0.1
      - GOBIN={{.GOBIN}} go install golang.org/x/tools/cmd/goimports@v0.19.0
      - GOBIN={{.GOBIN}} go install golang.org/x/tools/cmd/goimports@v0.19.0
      - GOBIN={{.GOBIN}} go install github.com/mgechev/revive@v1.3.7
      - GOBIN={{.GOBIN}} go install github.com/google/yamlfmt/cmd/yamlfmt@v0.12.1
      - GOBIN={{.GOBIN}} go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@v2.5.0

## DOCKER

  docker-build:
    cmds:
      - docker build -t {{.DOCKER_IMAGE_CATALYSTGO}}:{{.VERSION}}
        --build-arg VERSION={{.VERSION}}
        --build-arg BUILD_PATH=$(go list -m)/internal/build
        --no-cache .

      - docker build -t {{.DOCKER_IMAGE_PROTOC_GEN_CATALYSTGO}}:{{.VERSION}}
        --build-arg VERSION={{.VERSION}}
        --build-arg BUILD_PATH=$(go list -m)/internal/build
        --no-cache .

  docker-push:
    cmds:
      - docker push {{.DOCKER_IMAGE_CATALYSTGO}}:{{.VERSION}}
      - docker push {{.DOCKER_IMAGE_PROTOC_GEN_CATALYSTGO}}:{{.VERSION}}

  docker-release:
    cmds:
      - task: docker-build
      - task: docker-push

## INTERNAL COMMANDS

  go_files:
    desc: "Return all .go files and run .COMMAND on them"
    internal: true
    cmds:
     - find .
        -name "*.go"
        -not -path ./mock
        -exec {{.COMMAND}};
