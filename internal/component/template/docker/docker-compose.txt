version: "3.8"

services:
  {{.AppName}}:
    container_name: "{{.AppName}}"
    restart: unless-stopped
    volumes:
      - .:/go/src/{{.Module}}
    build:
      context: .
      dockerfile: ./development/Dockerfile
      target: development
    depends_on:
      etcd:
        condition: service_healthy
      postgres:
        condition: service_healthy

  etcd:
    image: quay.io/coreos/etcd:v3.5.13
    container_name: etcd
    restart: unless-stopped
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - INITIAL_CLUSTER_TOKEN=etcd-cluster-token
    ports:
      - "2379:2379"
    volumes:
      - etcd_data:/etcd-data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2379/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  vault:
    image: vault:1.9.2
    container_name: vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    volumes:
      - vault_data:/vault/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/v1/sys/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  jaeger:
    container_name: "jaeger"
    restart: unless-stopped
    image: jaegertracing/all-in-one:1.57.0
    ports:
      - "16686:16686"
      - "14268:14268"
      - "4318:4318"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16686/api/traces"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: {{.AppName}}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  etcd_data:
  vault_data:
  postgres_data:
